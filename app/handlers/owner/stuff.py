import time

from aiogram import Router
from aiogram.filters import Command, Text
from aiogram.types import CallbackQuery, Message

from app.db.functions import User
from app.filters.is_owner import IsOwner
from app.keyboards.admin_kayboard import admin_menu, back_button

router = Router()


@router.message(IsOwner(is_owner=True), Command(commands=["admin"]))
async def admin_command(message: Message) -> None:
    await message.answer("<b>–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>", reply_markup=admin_menu(), parse_mode='HTML')


@router.callback_query(Text('admin'))
async def back_admin_menu(callback: CallbackQuery) -> None:
    await callback.message.edit_text("<b>–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>", reply_markup=admin_menu(), parse_mode='HTML')


@router.callback_query(IsOwner(is_owner=True), Text('requests'))
async def admin_traffic_statistics(callback: CallbackQuery):
    requests_list = await User.user_requests()
    if not requests_list:
        requests_list = "–ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫!"

    await callback.message.edit_text(requests_list, reply_markup=back_button(), parse_mode='HTML')


@router.callback_query(IsOwner(is_owner=True), Text('statistics'))
async def admin_traffic_statistics(callback: CallbackQuery):
    count = await User.get_count()
    totem_count = await User.get_totem_count()
    contact_count = await User.get_contact_count()

    text = f"üìä <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ -</b> <code> {count} </code>  \n üìä <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, " \
           f"–ø—Ä–æ—à–µ–¥—à–∏—Ö –≤–∏–∫—Ç–æ—Ä–∏–Ω—É -</b> <code> {totem_count} </code> \n üìä <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ –¥–ª—è —Å–≤—è–∑–∏ -</b> " \
           f"<code> {contact_count} </code> \n"

    await callback.message.edit_text(text, reply_markup=back_button(), parse_mode='HTML')


@router.callback_query(Text('close'))
async def admin_close_menu(callback: CallbackQuery) -> None:
    await callback.message.delete()
